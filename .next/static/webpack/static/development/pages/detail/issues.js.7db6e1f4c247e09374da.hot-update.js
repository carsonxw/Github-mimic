webpackHotUpdate("static/development/pages/detail/issues.js",{

/***/ "./pages/detail/issues.js":
/*!********************************!*\
  !*** ./pages/detail/issues.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js");
/* harmony import */ var _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs2/core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js");
/* harmony import */ var _babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js");
/* harmony import */ var antd_lib_spin_style_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/spin/style/css */ "./node_modules/antd/lib/spin/style/css.js");
/* harmony import */ var antd_lib_spin_style_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd_lib_spin_style_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var antd_lib_spin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd/lib/spin */ "./node_modules/antd/lib/spin/index.js");
/* harmony import */ var antd_lib_spin__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd_lib_spin__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var antd_lib_select_style_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/select/style/css */ "./node_modules/antd/lib/select/style/css.js");
/* harmony import */ var antd_lib_select_style_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select_style_css__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! antd/lib/select */ "./node_modules/antd/lib/select/index.js");
/* harmony import */ var antd_lib_select__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(antd_lib_select__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var antd_lib_avatar_style_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! antd/lib/avatar/style/css */ "./node_modules/antd/lib/avatar/style/css.js");
/* harmony import */ var antd_lib_avatar_style_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(antd_lib_avatar_style_css__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var antd_lib_avatar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd/lib/avatar */ "./node_modules/antd/lib/avatar/index.js");
/* harmony import */ var antd_lib_avatar__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(antd_lib_avatar__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js");
/* harmony import */ var antd_lib_button_style_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! antd/lib/button/style/css */ "./node_modules/antd/lib/button/style/css.js");
/* harmony import */ var antd_lib_button_style_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button_style_css__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! antd/lib/button */ "./node_modules/antd/lib/button/index.js");
/* harmony import */ var antd_lib_button__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(antd_lib_button__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dynamic */ "./node_modules/next-server/dist/lib/dynamic.js");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _components_with_repo_basic__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/with-repo-basic */ "./components/with-repo-basic.jsx");
/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../lib/api */ "./lib/api.js");
/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_lib_api__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../lib/utils */ "./lib/utils.js");
/* harmony import */ var _components_SearchUser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/SearchUser */ "./components/SearchUser.jsx");




















var MdRenderer = next_dynamic__WEBPACK_IMPORTED_MODULE_14___default()(function () {
  return Promise.all(/*! import() */[__webpack_require__.e("styles"), __webpack_require__.e(1)]).then(__webpack_require__.bind(null, /*! ../../components/MarkdownRenderer */ "./components/MarkdownRenderer.jsx"));
}, {
  loadableGenerated: {
    webpack: function webpack() {
      return [/*require.resolve*/(/*! ../../components/MarkdownRenderer */ "./components/MarkdownRenderer.jsx")];
    },
    modules: ['../../components/MarkdownRenderer']
  }
});

function IssueDetail(_ref) {
  var issue = _ref.issue;
  return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-330220578" + " " + "root"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(MdRenderer, {
    content: issue.body
  }), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-330220578" + " " + "actions"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_11___default.a, {
    href: issue.html_url,
    target: "_blank"
  }, "Open Issue Discussion")), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_12___default.a, {
    id: "330220578"
  }, ".root.jsx-330220578{background:#fafafa;padding:20px;}.actions.jsx-330220578{text-align:right;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/hochungwong/Documents/React/nextjs-project/pages/detail/issues.js */"));
}

function IssueItem(_ref2) {
  var issue = _ref2.issue;

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_13__["useState"])(false),
      _useState2 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__["default"])(_useState, 2),
      showDetail = _useState2[0],
      setShowDetail = _useState2[1]; //avoid closure


  var toggleShowDetail = Object(react__WEBPACK_IMPORTED_MODULE_13__["useCallback"])(function () {
    setShowDetail(function (detail) {
      return !detail;
    });
  }, []);
  return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-535737749" + " " + "issue"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_11___default.a, {
    type: "primary",
    size: "small",
    style: {
      position: 'absolute',
      right: 10,
      top: 10
    },
    onClick: toggleShowDetail
  }, showDetail ? 'Hide Issue' : 'View Issue'), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-535737749" + " " + "avatar"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_avatar__WEBPACK_IMPORTED_MODULE_8___default.a, {
    src: issue.user.avatar_url,
    shape: "square",
    size: 50
  })), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-535737749" + " " + "main-info"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("h6", {
    className: "jsx-535737749"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("span", {
    className: "jsx-535737749"
  }, issue.title), issue.labels.map(function (label) {
    return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(Label, {
      label: label,
      key: label.id
    });
  })), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("p", {
    className: "jsx-535737749" + " " + "sub-info"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("span", {
    className: "jsx-535737749"
  }, "Updated at ", Object(_lib_utils__WEBPACK_IMPORTED_MODULE_17__["getLastUpdated"])(issue.updated_at)))), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_12___default.a, {
    id: "535737749"
  }, ".issue.jsx-535737749{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-535737749:hover{background:#fafafa;}.issue.jsx-535737749+.issue.jsx-535737749{border-top:1px solid #eee;}.main-info.jsx-535737749>h6.jsx-535737749{max-width:600px;font-size:16px;padding-right:40px;}.avatar.jsx-535737749{margin-right:20px;}.sub-info.jsx-535737749{margin-bottom:0;}.sub-info.jsx-535737749>span.jsx-535737749+span.jsx-535737749{display:inline-block;margin-left:20px;font-size:12px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/hochungwong/Documents/React/nextjs-project/pages/detail/issues.js */")), showDetail ? react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(IssueDetail, {
    issue: issue
  }) : null);
}

function makeQuery(creator, state, labels) {
  var creatorStr = creator ? "creator=".concat(creator) : '';
  var stateStr = state ? "state=".concat(state) : '';
  var labelStr = '';

  if (labels && labels.length > 0) {
    labelStr = "labels=".concat(labels.join(','));
  }

  var arr = [];
  if (creatorStr) arr.push(creatorStr);
  if (stateStr) arr.push(stateStr);
  if (labelStr) arr.push(labelStr);
  return "?".concat(arr.join('&'));
}

function Label(_ref3) {
  var label = _ref3.label;
  return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_13___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("span", {
    style: {
      backgroundColor: "#".concat(label.color)
    },
    className: "jsx-3397317665" + " " + "label"
  }, label.name), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_12___default.a, {
    id: "3397317665"
  }, ".label.jsx-3397317665{display:inline-block;line-height:20px;margin-left:15px;padding:10px;border-radius:5px;}.label.jsx-3397317665{margin-left:15px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/hochungwong/Documents/React/nextjs-project/pages/detail/issues.js */"));
}

var Option = antd_lib_select__WEBPACK_IMPORTED_MODULE_6___default.a.Option;

function Issues(_ref4) {
  var initialIssues = _ref4.initialIssues,
      labels = _ref4.labels,
      owner = _ref4.owner,
      name = _ref4.name;

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_13__["useState"])(),
      _useState4 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__["default"])(_useState3, 2),
      creator = _useState4[0],
      setCreator = _useState4[1];

  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_13__["useState"])(),
      _useState6 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__["default"])(_useState5, 2),
      status = _useState6[0],
      setStatus = _useState6[1];

  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_13__["useState"])([]),
      _useState8 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__["default"])(_useState7, 2),
      label = _useState8[0],
      setLabel = _useState8[1];

  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_13__["useState"])(initialIssues),
      _useState10 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__["default"])(_useState9, 2),
      issues = _useState10[0],
      setIssues = _useState10[1];

  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_13__["useState"])(false),
      _useState12 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__["default"])(_useState11, 2),
      fetching = _useState12[0],
      setFetching = _useState12[1];

  console.log(issues);
  var handleCreatorChange = Object(react__WEBPACK_IMPORTED_MODULE_13__["useCallback"])(function (value) {
    setCreator(value);
  }, []);
  var handleStatusChange = Object(react__WEBPACK_IMPORTED_MODULE_13__["useCallback"])(function (value) {
    setStatus(value);
  }, []);
  var handleLabelChange = Object(react__WEBPACK_IMPORTED_MODULE_13__["useCallback"])(function (value) {
    setLabel(value);
  }, []);
  var handleSearch = Object(react__WEBPACK_IMPORTED_MODULE_13__["useCallback"])(function () {
    setFetching(true);
    _lib_api__WEBPACK_IMPORTED_MODULE_16___default.a.request({
      url: "/repos/".concat(owner, "/").concat(name, "/issues").concat(makeQuery(creator, status, label))
    }).then(function (resp) {
      setIssues(resp.data);
      setFetching(false);
    }).catch(function (e) {
      console.log(e);
      setFetching(false);
    });
  }, [owner, name, creator, status, label]);
  return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-3297741239" + " " + "root"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-3297741239" + " " + "search"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_components_SearchUser__WEBPACK_IMPORTED_MODULE_18__["default"], {
    onChange: handleCreatorChange,
    value: creator
  }), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_6___default.a, {
    placeholder: "Status",
    onChange: handleStatusChange,
    style: {
      width: 200,
      marginLeft: 20
    }
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(Option, {
    value: "all"
  }, "all"), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(Option, {
    value: "open"
  }, "open"), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(Option, {
    value: "closed"
  }, "closed")), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_select__WEBPACK_IMPORTED_MODULE_6___default.a, {
    mode: "multiple",
    placeholder: "Label",
    onChange: handleLabelChange,
    style: {
      flexGrow: 1,
      marginLeft: 20,
      marginRight: 20
    },
    value: label
  }, labels.map(function (label) {
    return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(Option, {
      value: label.name,
      key: label.id
    }, label.name);
  })), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_button__WEBPACK_IMPORTED_MODULE_11___default.a, {
    type: "primary",
    onClick: handleSearch,
    disabled: fetching
  }, "Search")), fetching ? react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-3297741239" + " " + "loading"
  }, react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(antd_lib_spin__WEBPACK_IMPORTED_MODULE_4___default.a, null)) : react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("div", {
    className: "jsx-3297741239" + " " + "issues"
  }, issues.map(function (issue) {
    return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(IssueItem, {
      issue: issue,
      key: issue.id
    });
  })), react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_12___default.a, {
    id: "3297741239"
  }, ".issues.jsx-3297741239{border:1px solid #eee;border-radius:5px;margin-bottom:20px;margin-top:20px;}.search.jsx-3297741239{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.loading.jsx-3297741239{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/hochungwong/Documents/React/nextjs-project/pages/detail/issues.js */"));
}

Issues.getInitialProps =
/*#__PURE__*/
function () {
  var _ref6 = Object(_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(
  /*#__PURE__*/
  _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(_ref5) {
    var ctx, _ctx$query, owner, name, fetchs;

    return _babel_runtime_corejs2_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            ctx = _ref5.ctx;
            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;
            _context.t0 = _babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_1___default.a;
            _context.next = 5;
            return _lib_api__WEBPACK_IMPORTED_MODULE_16___default.a.request({
              url: "/repos/".concat(owner, "/").concat(name, "/issues")
            }, ctx.req, ctx.res);

          case 5:
            _context.t1 = _context.sent;
            _context.next = 8;
            return _lib_api__WEBPACK_IMPORTED_MODULE_16___default.a.request({
              url: "/repos/".concat(owner, "/").concat(name, "/labels")
            }, ctx.req, ctx.res);

          case 8:
            _context.t2 = _context.sent;
            _context.t3 = [_context.t1, _context.t2];
            _context.next = 12;
            return _context.t0.all.call(_context.t0, _context.t3);

          case 12:
            fetchs = _context.sent;
            return _context.abrupt("return", {
              owner: owner,
              name: name,
              initialIssues: fetchs[0].data,
              labels: fetchs[1].data
            });

          case 14:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref6.apply(this, arguments);
  };
}();

/* harmony default export */ __webpack_exports__["default"] = (Object(_components_with_repo_basic__WEBPACK_IMPORTED_MODULE_15__["default"])(Issues, 'issues'));

/***/ })

})
//# sourceMappingURL=issues.js.7db6e1f4c247e09374da.hot-update.js.map