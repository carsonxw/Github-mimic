{"version":3,"file":"static/webpack/static/development/pages/detail/issues.js.391175d921b786e657e7.hot-update.js","sources":["webpack:///./pages/detail/issues.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport dynamic from 'next/dynamic';\n\nimport withRepoBasic from '../../components/with-repo-basic';\nimport { Avatar, Button, Select } from 'antd';\nimport api from '../../lib/api';\n\nimport { getLastUpdated } from '../../lib/utils';\n\nimport SearchUser from '../../components/SearchUser';\n\nconst MdRenderer = dynamic(() => import('../../components/MarkdownRenderer'));\n\nfunction IssueDetail({ issue }) {\n    return (\n        <div className=\"root\" >\n            <MdRenderer \n                content={issue.body}\n            />\n            <div className=\"actions\">\n                <Button \n                    href={issue.html_url}\n                    target=\"_blank\"\n                >\n                    Open Issue Discussion\n                </Button>\n            </div>\n            <style jsx>{`\n                .root {\n                    background: #fafafa;\n                    padding: 20px;\n                }\n                .actions {\n                    text-align: right\n                }\n            `}</style>\n        </div>\n    )\n}\n\nfunction IssueItem({ issue }) {\n    \n    const [showDetail, setShowDetail] = useState(false);\n\n    //avoid closure\n    const toggleShowDetail = useCallback(() => {\n        setShowDetail(detail => !detail);\n    }, [])\n\n    return (\n        <div>\n            <div className=\"issue\">\n                <Button\n                    type='primary'\n                    size='small'\n                    style={{\n                        position: 'absolute',\n                        right: 10,\n                        top: 10\n                    }}\n                    onClick={toggleShowDetail}\n                >\n                    { showDetail ? 'Hide Issue' : 'View Issue' }      \n                </Button>\n                <div className=\"avatar\">\n                    <Avatar \n                        src={issue.user.avatar_url}\n                        shape='square'\n                        size={50}\n                    />\n                </div>\n                <div className=\"main-info\">\n                    <h6>\n                        <span>{issue.title}</span>\n                    </h6>\n                    <p className=\"sub-info\">\n                        <span>Updated at {getLastUpdated(issue.updated_at)}</span>\n                    </p>\n                </div>\n                \n                <style jsx>{`\n                    .issue {\n                        display: flex;\n                        position: relative;\n                        padding: 10px\n                    }\n                    .issue:hover {\n                        background: #fafafa;\n                    }\n                    .issue + .issue {\n                        border-top: 1px solid #eee;\n                    }\n                    .main-info > h6 {\n                        max-width: 600px;\n                        font-size: 16px;\n                        padding-right: 40px;\n                    }\n                    .avatar {\n                        margin-right: 20px;\n                    }\n                    .sub-info {\n                        margin-bottom: 0;\n                    }\n                    .sub-info > span + span {\n                        display: inline-block;\n                        margin-left: 20px;\n                        font-size: 12px;\n                    }\n                `}</style>\n            </div>\n            { showDetail ? <IssueDetail issue={ issue } /> : null }\n        </div>\n    )\n}\n\nconst Option = Select.Option;\n\nfunction Issues({ issues, labels }) {\n    console.log(labels);\n    const [creator, setCreator] = useState();\n    const [status, setStatus] = useState();\n    const [label, setLabel] = useState([]);\n\n    const handleCreatorChange = useCallback(value => {\n        setCreator(value);\n    }, []);\n\n    const handleStatusChange = useCallback(value => {\n        setStatus(value);\n    }, []);\n\n    const handleLabelChange = useCallback(value => {\n        setLabel(value);\n    }, []);\n\n    return (\n        <div className=\"root\">\n            <div className=\"search\">\n                <SearchUser \n                    onChange={handleCreatorChange}\n                    value={creator}\n                />\n                <Select \n                    placeholder=\"Status\"\n                    onChange={handleStatusChange}\n                    style={{\n                        width: 200\n                    }}\n                >\n                    <Option value=\"all\">all</Option>\n                    <Option value=\"open\">open</Option>\n                    <Option value=\"closed\">closed</Option>\n                </Select>\n                <Select \n                    mode=\"multiple\"\n                    placeholder=\"Label\"\n                    onChange={handleLabelChange}\n                    style={{\n                        width: 200\n                    }}\n                    value={label}\n                >\n                    { labels.map(label => \n                        <Option \n                            value={label.name} \n                            key={label.id}\n                        >\n                            {label.name}\n                        </Option>\n                    )}\n                </Select>\n            </div>\n            <div className=\"issues\">\n                {issues.map(issue => <IssueItem issue={issue} key={issue.id}/>)}\n            </div>\n            <style jsx>{`\n                .issues {\n                    border: 1px solid #eee;\n                    border-radius: 5px;\n                    margin-bottom: 20px;\n                    margin-top: 20px;\n                }    \n            `}</style>\n        </div>\n    )\n}\n\nIssues.getInitialProps = async ({ ctx }) => {\n    \n    const { owner, name } = ctx.query;\n\n    const issueResp = await api.request({\n        url: `/repos/${owner}/${name}/issues`\n    }, ctx.req, ctx.res);\n\n    const labelsResp = await api.request({\n        url: `/repos/${owner}/${name}/labels`\n    }, ctx.req, ctx.res);\n\n    return {\n        issues: issueResp.data,\n        labels: labelsResp.data\n    }\n}\n\nexport default withRepoBasic(Issues, 'issues') ;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AADA;AAGA;AAAA;AAEA;AACA;AAFA;AALA;AAAA;AAuBA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAYA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAzBA;AAAA;AA2DA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AADA;AAHA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AAPA;AASA;AAEA;AACA;AAFA;AADA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AArCA;AAAA;AAiDA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AACA;AALA;AAIA;AAJA;AAAA;AASA;AADA;AACA;AATA;AAQA;AARA;AAaA;AACA;AAFA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}