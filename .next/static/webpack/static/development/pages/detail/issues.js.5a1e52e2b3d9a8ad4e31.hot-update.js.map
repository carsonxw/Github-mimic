{"version":3,"file":"static/webpack/static/development/pages/detail/issues.js.5a1e52e2b3d9a8ad4e31.hot-update.js","sources":["webpack:///./pages/detail/issues.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport dynamic from 'next/dynamic';\n\nimport withRepoBasic from '../../components/with-repo-basic';\nimport { Avatar, Button, Select, Spin } from 'antd';\nimport api from '../../lib/api';\n\nimport { getLastUpdated } from '../../lib/utils';\n\nimport SearchUser from '../../components/SearchUser';\n\nconst MdRenderer = dynamic(() => import('../../components/MarkdownRenderer'));\n\nfunction IssueDetail({ issue }) {\n    return (\n        <div className=\"root\" >\n            <MdRenderer \n                content={issue.body}\n            />\n            <div className=\"actions\">\n                <Button \n                    href={issue.html_url}\n                    target=\"_blank\"\n                >\n                    Open Issue Discussion\n                </Button>\n            </div>\n            <style jsx>{`\n                .root {\n                    background: #fafafa;\n                    padding: 20px;\n                }\n                .actions {\n                    text-align: right\n                }\n            `}</style>\n        </div>\n    )\n}\n\nfunction IssueItem({ issue }) {\n    \n    const [showDetail, setShowDetail] = useState(false);\n\n    //avoid closure\n    const toggleShowDetail = useCallback(() => {\n        setShowDetail(detail => !detail);\n    }, [])\n\n    return (\n        <div>\n            <div className=\"issue\">\n                <Button\n                    type='primary'\n                    size='small'\n                    style={{\n                        position: 'absolute',\n                        right: 10,\n                        top: 10\n                    }}\n                    onClick={toggleShowDetail}\n                >\n                    { showDetail ? 'Hide Issue' : 'View Issue' }      \n                </Button>\n                <div className=\"avatar\">\n                    <Avatar \n                        src={issue.user.avatar_url}\n                        shape='square'\n                        size={50}\n                    />\n                </div>\n                <div className=\"main-info\">\n                    <h6>\n                        <span>{issue.title}</span>\n                        {\n                            issue.labels.map(label => <Label label={label} key={label.id}/>)\n                        }\n                    </h6>\n                    <p className=\"sub-info\">\n                        <span>Updated at {getLastUpdated(issue.updated_at)}</span>\n                    </p>\n                </div>\n                \n                <style jsx>{`\n                    .issue {\n                        display: flex;\n                        position: relative;\n                        padding: 10px\n                    }\n                    .issue:hover {\n                        background: #fafafa;\n                    }\n                    .issue + .issue {\n                        border-top: 1px solid #eee;\n                    }\n                    .main-info > h6 {\n                        max-width: 600px;\n                        font-size: 16px;\n                        padding-right: 40px;\n                    }\n                    .avatar {\n                        margin-right: 20px;\n                    }\n                    .sub-info {\n                        margin-bottom: 0;\n                    }\n                    .sub-info > span + span {\n                        display: inline-block;\n                        margin-left: 20px;\n                        font-size: 12px;\n                    }\n                `}</style>\n            </div>\n            { showDetail ? <IssueDetail issue={ issue } /> : null }\n        </div>\n    )\n}\n\nfunction makeQuery(creator, state, labels) {\n    let creatorStr = creator ? `creator=${creator}` : '';\n    let stateStr = state ? `state=${state}` : '';\n    let labelStr = '';\n    if (labels && labels.length > 0) {\n        labelStr = `labels=${labels.join(',')}`\n    }\n\n    const arr = [];\n\n    if (creatorStr) arr.push(creatorStr);\n    if (stateStr) arr.push(stateStr);\n    if (labelStr) arr.push(labelStr);\n\n    return `?${arr.join('&')}`;\n}\n\nfunction Label({ label }) {\n    return (\n        <>\n            <span \n                className=\"label\"\n                style={{\n                    backgroundColor: `#${label.color}`\n                }}\n            >\n                {label.name}\n            </span>\n            <style jsx>{`\n                .label {\n                    display: inline-block;\n                    line-height: 20px;\n                }\n                .label {\n                     margin-left: 15px; \n                }\n            `}</style>\n        </>\n    )\n}\n\nconst Option = Select.Option;\n\nfunction Issues({ initialIssues, labels, owner, name }) {\n    const [creator, setCreator] = useState();\n    const [status, setStatus] = useState();\n    const [label, setLabel] = useState([]);\n    const [issues, setIssues] = useState(initialIssues);\n    const [fetching, setFetching] = useState(false);\n\n    console.log(issues)\n\n    const handleCreatorChange = useCallback(value => {\n        setCreator(value);\n    }, []);\n\n    const handleStatusChange = useCallback(value => {\n        setStatus(value);\n    }, []);\n\n    const handleLabelChange = useCallback(value => {\n        setLabel(value);\n    }, []);\n\n    const handleSearch = useCallback(() => {\n        setFetching(true);\n        api.request({\n            url: `/repos/${owner}/${name}/issues${makeQuery(creator, status, label)}`\n        }).then(resp => {\n            setIssues(resp.data);\n            setFetching(false);\n        }).catch(e => {\n            console.log(e);\n            setFetching(false);\n        });\n    }, [owner, name, creator, status, label]);\n\n    return (\n        <div className=\"root\">\n            <div className=\"search\">\n                <SearchUser \n                    onChange={handleCreatorChange}\n                    value={creator}\n                />\n                <Select \n                    placeholder=\"Status\"\n                    onChange={handleStatusChange}\n                    style={{\n                        width: 200,\n                        marginLeft: 20\n                    }}\n                >\n                    <Option value=\"all\">all</Option>\n                    <Option value=\"open\">open</Option>\n                    <Option value=\"closed\">closed</Option>\n                </Select>\n                <Select \n                    mode=\"multiple\"\n                    placeholder=\"Label\" \n                    onChange={handleLabelChange}\n                    style={{\n                        flexGrow: 1,\n                        marginLeft: 20,\n                        marginRight: 20\n                    }}\n                    value={label}\n                >\n                    { labels.map(label => \n                        <Option\n                            value={label.name} \n                            key={label.id}\n                        >\n                            {label.name}\n                        </Option>\n                    )}\n                </Select>\n                <Button \n                    type='primary'\n                    onClick={handleSearch}\n                    disabled={fetching}\n                >\n                    Search\n                </Button>\n            </div>\n            {\n                fetching ? \n                <div className=\"loading\"><Spin /></div> \n                : \n                <div className=\"issues\">\n                    {issues.map(issue => <IssueItem issue={issue} key={issue.id}/>)}\n                </div>\n            }\n            \n            <style jsx>{`\n                .issues {\n                    border: 1px solid #eee;\n                    border-radius: 5px;\n                    margin-bottom: 20px;\n                    margin-top: 20px;\n                }\n                .search {\n                    display: flex\n                }\n                .loading {\n                    height: 400px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nIssues.getInitialProps = async ({ ctx }) => {\n    \n    const { owner, name } = ctx.query;\n    const fetchs = await Promise.all([\n        await api.request({\n            url: `/repos/${owner}/${name}/issues`\n        }, ctx.req, ctx.res),\n        await api.request({\n        url: `/repos/${owner}/${name}/labels`\n    }, ctx.req, ctx.res),\n    ])\n\n    return {\n        owner,\n        name,\n        initialIssues: fetchs[0].data,\n        labels: fetchs[1].data\n    }\n}\n\nexport default withRepoBasic(Issues, 'issues') ;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AADA;AAGA;AAAA;AAEA;AACA;AAFA;AALA;AAAA;AAuBA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAYA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AA5BA;AAAA;AA8DA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AADA;AAFA;AAAA;AADA;AAAA;AAonDA;AAAA;AA0EA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAQA;AADA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAaA;AACA;AACA;AACA;AAJA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAmBA;;;;A","sourceRoot":""}