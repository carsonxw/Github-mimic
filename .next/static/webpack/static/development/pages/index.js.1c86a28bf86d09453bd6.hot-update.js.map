{"version":3,"file":"static/webpack/static/development/pages/index.js.1c86a28bf86d09453bd6.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Button, Icon } from 'antd';\nimport getConfig from 'next/config';\nimport { connect } from 'react-redux';\n\nimport Repo from '../components/Repo';\n\nconst { publicRuntimeConfig } = getConfig();\n\nconst api = require('../lib/api');\n\nconst url = '/search/repositories?q=react';\n\nfunction Index ({ userRepos, starredRepos, user }) {\n    console.log(userRepos);\n    console.log(starredRepos);\n    console.log(user)\n    if (!user || !user.id) {\n        return (\n            <div className=\"root\">\n                <p>Please Log In with Your Github Account</p>\n                <Button \n                    type='primary' \n                    href={ publicRuntimeConfig.OAUTH_URL }\n                >   \n                    Click to Log In\n                </Button>\n                <style jsx>{`\n                    .root {\n                        height: 400px;\n                        display: flex;\n                        flex-direction: column;\n                        justify-content: center;\n                        align-items: center; \n                    }\n                `}</style>\n            </div>\n        )\n    }\n    return (\n        <div className=\"root\">\n            <div className=\"user-info\">\n                <img \n                    src={user.avatar_url} \n                    alt=\"use avatar\" \n                    className=\"avatar\"\n                />\n                <span className=\"login\">{user.login}</span>\n                <span className=\"name\">{user.name}</span>\n                <span className=\"bio\">{user.bio}</span>\n                <p className=\"email\">\n                    <Icon \n                        type='mail'\n                        style={{ marginRight: 5 }}\n                    />\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\n                </p>\n            </div>\n            <div className=\"user-repos\">\n                <div className=\"user-repo\">\n                    {userRepos .map((repo,key) => <Repo key={key} repo={repo}/>)}\n                </div>\n            </div>\n            <style jsx>{`\n                .root {\n                    display: flex;\n                    align-items: flex-start;\n                    \n                }\n                .user-info {\n                    width: 200px;\n                    margin-right: 40px;\n                    flex-shrink: 0;\n                    display: flex;\n                    flex-direction: column\n                }\n                .login {\n                    font-weight: 800;\n                    font-size: 20px;\n                    margin-top: 20px;\n                }.\n                .name {\n                    font-size: 16px;\n                    color: #777;\n                }\n                .bio {\n                    margin-top: 20px;\n                    color: #333;\n                }\n                .avatar {\n                    width: 100%;\n                    border-radius: 5px;\n                }\n            `}</style>\n        </div>\n    )\n} \n\n/*getInitialProps 会在客户端不同页面之间每次跳转时调用\n同时在服务端渲染的时候，若访问index页面，getInitialProps也会被调用\n属于node环境，不存在客户端domain这些window下才有的环境\n*/\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\n    const user = reduxStore.getState().user;\n    if (!user || !user.id) {\n        return {};\n    }\n    const userRepos = await api.request({ url: '/user/repos' }, ctx.req, ctx.res);\n    const userStarredRepos = await api.request(\n        { url: `/user/starred` },\n        ctx.req,\n        ctx.res\n    );\n    return {\n        userRepos: userRepos.data,\n        starredRepos: userStarredRepos.data\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user, \n    }\n}\n\nexport default connect(mapStateToProps)(Index) ;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAFA;AAAA;AAmBA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAwDA;AAEA;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAKA;AAAA;AACA;AANA;AAKA;AALA;AAAA;AAOA;AAAA;AACA;AARA;AAMA;AANA;AAYA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}