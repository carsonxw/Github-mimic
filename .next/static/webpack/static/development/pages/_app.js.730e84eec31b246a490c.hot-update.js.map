{"version":3,"file":"static/webpack/static/development/pages/_app.js.730e84eec31b246a490c.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app';\nimport 'antd/dist/antd.css';\nimport testHoc from '../lib/with-redux';\nimport Layout from '../components/Layout';\nimport { Provider } from 'react-redux';\n\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport PageLoading from '../components/Page-loading';\n\nimport axios from 'axios';\n\nclass MyApp extends App {\n    state = {\n        context: 'value',\n        loading: false\n    }\n\n    startLoading = () => {\n        this.setState({\n            loading: true\n        });\n    }\n\n    stopLoading = () => {\n        this.setState({\n            loading: false\n        });\n    }\n\n    componentDidMount() {\n        Router.events.on('routeChangeStart', this.startLoading);\n        Router.events.on('routeChangeComplete', this.stopLoading);\n        Router.events.on('routeChangeError', this.stopLoading);\n    }\n\n    componentWillUnmount() {\n        Router.events.off('routeChangeStart');\n        Router.events.off('routeChangeComplete');\n        Router.events.off('routeChangeError');\n    }\n\n    //self-defined MyApp\n    //http request here\n    static async getInitialProps(ctx) {\n        const { Component } = ctx;\n        let pageProps = {};\n        if (Component.getInitialProps) {\n            pageProps = await Component.getInitialProps(ctx);\n        }\n        return {\n            pageProps\n        }\n    } \n\n    render() {\n        const { Component , pageProps , reduxStore} = this.props;\n        const { loading } = this.state;\n        return (\n            <Container >\n                <Provider store={reduxStore}>\n                    { loading ? <PageLoading /> : null }\n                    <Layout>\n                        <Component { ...pageProps } />\n                    </Layout>\n                </Provider>      \n            </Container>\n            \n        )\n    }\n}\n\nexport default testHoc(MyApp);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AASA;;;;;;AAzBA;;;;;;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;AAvCA;AACA;AA2DA;;;;A","sourceRoot":""}